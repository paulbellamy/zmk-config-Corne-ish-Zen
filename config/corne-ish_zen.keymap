/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define QWERTY 0
#define NUMBER 1
#define SYMBOL 2
#define ADJUST 3

/ {
        // From: https://zmk.dev/docs/behaviors/hold-tap/#comparison-to-qmk
        // `balanced` flavour is similar to `PERMISSIVE_HOLD` setting in qmk
        behaviors {
            bhm: balanced_homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <200>;    // <---[[moderate duration]]
                quick-tap-ms = <0>;
                flavor = "balanced";
                bindings = <&kp>, <&kp>;
            };
        };

        conditional_layers {
          compatible = "zmk,conditional-layers";
          tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
          };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  | R        |     T    |   |    Y    |    U     |  I  |  O  |  P  |  \   |
// |  =   |  A  |  S  |  D  | F        |     G    |   |    H    |    J     |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  | V        |     B    |   |    N    |    M     |  ,  |  .  |  /  | SHFT |
//                    | GUI | NUM_BSPC | CTRL_ESC |   | SYM_ENT | NUM_SPC  | ALT |
                        bindings = <
   &kp TAB    &kp Q  &kp W  &kp E     &kp R            &kp T            &kp Y          &kp U  &kp I      &kp O    &kp P     &kp BSLH
   &kp EQUAL  &kp A  &kp S  &kp D     &kp F            &kp G            &kp H          &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
   &kp LSHFT  &kp Z  &kp X  &kp C     &kp V            &kp B            &kp N          &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                            &kp LGUI  &lt NUMBER BSPC  &mt LCTRL ESC    &mt SYMBOL RET &mt NUMBER SPACE  &kp RALT
                        >;
                };

                lower_layer {
                        label = "NUMBER";
                        // TODO: Find where to put & key. for now shift-7.
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  {  |  }  |  \  |   |  /  |  7  |  8  |  9  |  -  |      |
// |      |  #  |  $  |  [  |  ]  |  `  |   |  *  |  4  |  5  |  6  |  +  |      |
// |      |  ~  |  ^  |  (  |  )  |  %  |   |  0  |  1  |  2  |  3  |  ,  |      |
//                    |     |     |     |   | ENT |     |     |
                        bindings = <
   &trans  &kp EXCL   &kp AT     &kp LBRC  &kp RBRC  &kp BSLH         &kp FSLH         &kp N7  &kp N8  &kp N9  &kp MINUS  &trans
   &trans  &kp HASH   &kp DLLR   &kp LBKT  &kp RBKT  &kp GRAVE        &kp KP_MULTIPLY  &kp N4  &kp N5  &kp N6  &kp PLUS   &trans
   &trans  &kp TILDE  &kp CARET  &kp LPAR  &kp RPAR  &kp PRCNT        &kp N0           &kp N1  &kp N2  &kp N3  &kp COMMA  &trans
                          	     &trans    &trans    &trans           &trans           &trans  &trans
                        >;
                };

                raise_layer {
                        label = "SYMBOL";
// -----------------------------------------------------------------------------------------
// |      | BDN | BUP | F3  | F4  | F5  |   | PLY | FFD | MUT | VDN | VUP |      |
// |      |     | HOM | PDN | PUP | END |   | LFT | DWN | UP  | RT  |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     | DEL |     |   |     | SPC |     |
                        bindings = <
   &trans    &kp C_BRI_DN  &kp C_BRI_UP  &kp F3         &kp F4        &kp F5          &kp C_PP  &kp C_NEXT  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP   &trans
   &trans    &trans        &kp HOME      &kp PG_DN   &kp PG_UP  &kp END      &kp LEFT  &kp DOWN    &kp UP      &kp RIGHT     &trans         &trans
   &trans    &trans        &trans        &trans      &trans     &trans       &trans    &trans      &trans      &trans        &trans         &trans
                    	     &trans        &lt NUMBER  DEL        &trans       &trans    &trans      &trans
                        >;
                };

                nav_layer {
                        label = "ADJUST";
// -----------------------------------------------------------------------------------------
// |      | RST |     |BTCLR|BTPRV|BTNXT|   |     | F9  | F10 | F11 | F12 |      |
// |      |     |     |     |     |     |   |     | F5  | F6  | F7  | F8  |      |
// |      | SLP | LCK |     |     |     |   |     | F1  | F2  | F3  | F4  |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &none  &reset       &none       &bt BT_CLR  &bt BT_PRV  &bt BT_NXT      &none   &kp F9  &kp F10  &kp F11  &kp F12  &none
   &none  &none        &none       &none       &none       &none           &none   &kp F5  &kp F6   &kp F7   &kp F8   &none
   &none  &kp C_SLEEP  &kp K_LOCK  &none       &none       &none           &none   &kp F1  &kp F2   &kp F3   &kp F4   &none
                                   &trans      &trans      &trans          &trans  &trans  &trans   
                        >;
                };
        };
};
